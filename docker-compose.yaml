version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes: 
      - esdata:/usr/shre/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: always
  
  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.1
    volumes:
      - ./kibana.yml/:/usr/share/kibana/config/kibana.yml
    ports: 
      - "5601:5601"
    depends_on: 
      - elasticsearch
    restart: always

  web-server:
    depends_on:
      - kafka
    build: ./WebServer
    command: python WebServer/main.py
    ports:
      - "8085:8085"
    volumes:
      - .:/web-server
  
  scanner:
    depends_on:
      - kafka
    build: ./Scanner
    command: python Scanner/main.py localhost 29092
    ports:
      - "8086:8086"
    volumes:
      - .:/scanner
    network_mode: host
    restart: always
  
  elk:
    depends_on:
      - kafka
      - elasticsearch
    build: ./Elasticsearch
    command: python Elasticsearch/main.py
    ports:
      - "8087:8087"
    volumes:
      - .:/elk
    restart: always

volumes: 
    esdata:
        driver: local
